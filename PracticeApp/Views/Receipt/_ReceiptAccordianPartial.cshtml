@model IEnumerable<PracticeApp.Models.ReceiptModel>
@{
}

@foreach (var item in Model)
{
    var headingString = $"flush-heading-{item.GRN}";
    var collapseString = $"flush-collapse{item.GRN}";
    var itemCount = 0;

    @if (item.ReceiptItems != null)
    {
        itemCount = item.ReceiptItems.Count();
    }

    <div class="accordion-item">
        <h2 class="accordion-header" id="@headingString">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#@collapseString" aria-expanded="false" aria-controls="@collapseString">
                Receipt GRN : @item.GRN Items on the receipt : @itemCount
            </button>
        </h2>
        <div id="@collapseString" class="accordion-collapse collapse" aria-labelledby="@headingString" data-bs-parent="#accordionFlush">
            <div class="accordion-body">
                <div class="container">
                    <div class="align-content-center">
                        <h5>Details</h5>
                        <dl class="row">
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.GRN)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(modelItem => item.GRN)
                            </dd>

                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Arrival)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(modelItem => item.Arrival)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.ExpectedArrival)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(modelItem => item.ExpectedArrival)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.TotalWeight)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(modelItem => item.TotalWeight)
                            </dd>

                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.TotalCube)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(modelItem => item.TotalCube)
                            </dd>


                        </dl>
                        <a class="btn btn-primary" asp-controller="Item" asp-action="Create" asp-route-id="@item.GRN">Create Item</a>
                        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.GRN">Edit</a>
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.GRN">Delete</a>

                    </div>
                    <div class="row">
                        <h5> Products </h5>
                        @if (item.ReceiptItems != null)
                        {
                            @await Html.PartialAsync("_ReceiptItemsCard.cshtml", item.ReceiptItems)
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
}
